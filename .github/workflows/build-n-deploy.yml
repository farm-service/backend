name: Azure Container Apps Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      - name: Determine Semantic Version using GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

      - name: Inserting FullSemVer into the build
        run: |
          sed -i "s/BUILD_FULL_SEMANTIC_VERSION = \"dev-build\"/BUILD_FULL_SEMANTIC_VERSION = \"${{ steps.gitversion.outputs.FullSemVer }}\"/" ${{ github.workspace }}/app/configuration/settings.py

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Creating Azure Monitoring workspace
        run: |
          az monitor log-analytics workspace create \
           --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
           --workspace-name ${{ vars.AZURE_MONITORING_WORKSPACE_NAME }} \
           --location "${{ vars.AZURE_LOCATION }}" \
           --subscription ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Create containerapp environment
        run: |
          az containerapp env create \
          --name ${{ vars.AZURE_CAPP_ENV_NAME }} \
          --logs-workspace-id ${{ vars.AZURE_MONITORING_WORKSPACE_ID }} \
          --logs-workspace-key ${{ secrets.AZURE_MONITORING_WORKSPACE_KEY }} \
          --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
          --location "${{ vars.AZURE_LOCATION }}" \
          --subscription ${{ vars.AZURE_SUBSCRIPTION_ID }}
      
      - name: Create Azure Container Registry
        run: |
          az acr create \
            --name ${{ vars.AZURE_ACR_NAME }} \
            --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
            --sku Basic \
            --location "${{ vars.AZURE_LOCATION }}" \
            --admin-enabled true \
            --workspace ${{ vars.AZURE_MONITORING_WORKSPACE_NAME }}

      - name: Create containerapp
        run: |
          az containerapp create \
          --name ${{ vars.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
          --environment ${{ vars.AZURE_CAPP_ENV_NAME }} \
          --subscription ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Configuring access to ACR
        run: |
          az containerapp registry set \
          --name ${{ vars.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
          --server ${{ vars.AZURE_ACR_NAME }}..azurecr.io \
          --identity system

      - name: Build and deploy Container App [v${{ steps.gitversion.outputs.SemVer }}]
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}
          acrName: ${{ vars.AZURE_ACR_NAME }}
          containerAppName: ${{ vars.AZURE_CONTAINER_APP_NAME }}
          resourceGroup: ${{ vars.AZURE_RESOURCE_GROUP }}
          ingress: "external"
          targetPort: 8000
          imageToBuild: ${{ vars.AZURE_ACR_NAME }}.azurecr.io/${{ vars.DOCKER_IMAGE_NAME }}:${{ steps.gitversion.outputs.SemVer }}
